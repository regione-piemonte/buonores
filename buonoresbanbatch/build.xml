<?xml version="1.0" encoding="UTF-8"?>

<!-- ##################################################### -->
<!-- # build.xml file per compilazione e generazione     # -->
<!-- # del pacchetto per il rilascio dell'applicazione.  # -->
<!-- #                                                   # -->
<!-- # Per una lista completa dei tasks eseguibili usare # -->
<!-- # l'argomento di ant -projecthelp quando si         # -->
<!-- # richiama questo build.xml.                        # -->
<!-- ##################################################### -->

<project basedir="."
         default="default"
         name="buonoresbanbatch"
         xmlns:ivy="antlib:fr.jayasoft.ivy.ant" >

	<description>Build file per il progetto: [buonoresbanbatch]</description>

	<!-- -->
	<echo message="Loading build properties..." />
	<property file="buildfiles/build.properties" />
	<property file="buildfiles/build.locale.properties" />
	<property file="buildfiles/${target}.properties" />

	<!-- -->
	<path id="library.ref">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<!--<fileset dir="${lib-ext}">
					<include name="**/*.jar" />
					<include name="**/*.zip" />
				</fileset>-->
	</path>


	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: init                                              # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="init" description="Inizializza lo script Ant.">
		<tstamp />
		<condition property="target" value="dev">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>
		<mkdir dir="${build}/classes" />
		<mkdir dir="${build}/archives/${target}" />
		<mkdir dir="${dist}/${target}" />
		<mkdir dir="${build}/javadoc" />
		<mkdir dir="${build}/jsp" />
		<mkdir dir="${build}/cache" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: default                                           # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="default"
	        description="Eseguire il build per l'environment
	                     specificato a linea di comando con
	                     -Dtarget=${target} o per tutti gli
	                     environment (se non specificato).">

		<condition property="first-call" value="distribution">
			<not>
				<equals arg1="${target}" arg2="$${target}" />
			</not>
		</condition>

		<condition property="first-call" value="all-targets">
			<equals arg1="${target}" arg2="$${target}" />
		</condition>

		<echo message="server: ${server}" />
		<echo message="target: ${target}" />
		<echo message="first-call: ${first-call}" />

		<antcall target="clean-all" />
		<antcall target="${first-call}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [DISTRIB]: all-targets                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="all-targets"
	        description="Esegue il build per le varie distribuzioni in sequenza.">
		<!--PROTECTED REGION ID(R-1748880042) ENABLED START-->
		<!-- Inserire le varie distribuzioni di cui si intende eseguire il build. -->
		<antcall target="distribution" />
		<!--PROTECTED REGION END-->
	</target>


	<!-- -->
	<!-- ############################################################# -->
	<!-- # [IVY]: resolve-dependencies                               # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="resolve-dependencies"
	        description="carica le librerie dal repository remoto">
		<ivy:configure file="${basedir}/buildfiles/ivyconf.xml" />
		<ivy:resolve file="${basedir}/buildfiles/ivy.xml" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [IVY]: internal target: load-dependencies                 # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="load-dependencies"
	        depends="resolve-dependencies"
	        description="Risolve le dipendenze esterne.">
		<ivy:retrieve pattern="${basedir}/lib/[artifact].[type]" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: compile-all                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="compile-all" depends="init,load-dependencies"
	        description="Compila tutti i sorgenti.">

		<echo message="===> Target: ${target}" />

		<!-- compilazione dei sorgenti -->
		<javac srcdir="${src}/java" destdir="${build}/classes"
		       optimize="on" deprecation="on"
		       compiler="modern"
		       debug="on" debuglevel="lines,vars,source">
			<classpath refid="library.ref" />
		</javac>
		<!--  copio i file di properties -->
				<copy todir="${temp}">
					<fileset dir="${src}/resources" excludes="**/*.java*,**/*.jbx*" />
				</copy>	
			<antcall target="config-encrypt-key" />
		        <!-- replace della connessione alla base dati -->
				<replace file="${temp}/configuration.properties" token="@@db.driverClassName@@" value="${db.driverClassName}" />
				<replace file="${temp}/configuration.properties" token="@@db.url@@" value="${db.url}" />
				<replace file="${temp}/configuration.properties" token="@@db.username@@" value="${db.username}" />
				<replace file="${temp}/configuration.properties" token="@@db.password@@" value="${db.password}" />
			<!--BUONODOMSRV -->
				<replace file="${temp}/configuration.properties" token="@@@buonoressrvurl@@@" value="${buonoressrvurl}"/>
				<replace file="${temp}/configuration.properties" token="@@@buonoressrvusername@@@" value="${buonoressrvusername}"/>
				<replace file="${temp}/configuration.properties" token="@@@buonoressrvpassword@@@" value="${buonoressrvpassword}"/>
			<!--BUONODOMBANDISRV -->
				<replace file="${temp}/configuration.properties" token="@@@buonoresbandisrvurl@@@" value="${buonoresbandisrvurl}"/>
				<replace file="${temp}/configuration.properties" token="@@@buonoresbandisrvusername@@@" value="${buonoresbandisrvusername}"/>
				<replace file="${temp}/configuration.properties" token="@@@buonoresbandisrvpassword@@@" value="${buonoresbandisrvpassword}"/>
			<!-- Encrypt -->
				<replace file="${temp}/configuration.properties" token="@@@dbKeyCrypt@@@" value="${dbKeyCrypt}"/>
		 		<!--  copio le librerie -->
		   	    <copy todir="${lib_temp}">
					<fileset dir="${lib}" excludes="${war-exclude-libs-filter}, ${war-exclude-custom-libs-filter}, **/*.java*,**/*.jbx*" />
				</copy>
				<!--<copy todir="${lib_temp}">
						<fileset dir="${lib-ext}" excludes="**/*.java*,**/*.jbx*" />
				</copy>-->
				
				<delete dir="${log_temp}" />
				<mkdir dir="${log_temp}" />

		 		<!--  copio directory dei log -->
				<copy todir="${log_temp}">
						<fileset dir="log" />
				</copy>
					
				<!-- copia dei sorgenti -->
				<copy todir="${build}/classes">
					<fileset dir="${src}/java" excludes="**/*.java*,**/*.jbx*" />
				</copy>
	</target>
	<!-- -->
				<!-- ############################################################# -->
				<!-- # Target: config-encrypt-key                                # -->
				<!-- ############################################################# -->
				<!-- -->
				<target name="config-encrypt-key" description="Sostituisce la chiave con cui criptare i documenti sul db">

					<echo message="dbKeyCrypt======================>${dbKeyCrypt}" />
					<copy todir="${temp}/${target}/src/it/csi/buonores/buonoresbanbatch/dao/">
						<fileset dir="${src}/java/it/csi/buonores/buonoresbanbatch/dao/" 
							includes="*SQLStatements.java"/>
						
					</copy>

					<replace dir="${temp}/${target}/src/it/csi/buonores/buonoresbanbatch/dao/">
						<include name="*SQLStatements.java" />
						<replacefilter token="@dbKeyCrypt@" value="${dbKeyCrypt}" />
					</replace>

					<javac srcdir="${temp}/${target}/src/it/csi/buonores/buonoresbanbatch/dao/" 
						includes="*SQLStatements.java"
						destdir="${build}/classes" 
						optimize="on" 
						deprecation="on" 
						compiler="modern"
						debug="true" debuglevel="lines,vars,source">
						<classpath refid="library.ref" />
					</javac>


				</target>
		
		<!-- -->
	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-jar                                # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="distribution" description="Genera il jar per le classi comuni." depends="clean-all,load-dependencies,compile-all">
		
		<path id="build.classpath">
		    <fileset dir="${basedir}/">
		        <include name="${lib}/*.jar"/>
		    </fileset>
		</path>
		<pathconvert property="mf.classpath" pathsep=" ">
		    <path refid="build.classpath"/>
		    <mapper>
		        <chainedmapper>
		            <flattenmapper/>
		            <globmapper from="*.jar" to="lib/*.jar"/>
		        </chainedmapper>
		    </mapper>
		</pathconvert>
		
		
		<jar destfile="${lib_temp}/buonoresbanbatch.jar">

			<zipfileset dir="${build}/classes" includes="**/*" />
			
			
			<manifest>
				<section name="${company-name}">
					<attribute name="Nome-Prodotto" value="${contesto}" />
					<attribute name="Nome-Componente" value="${componente}" />
					<attribute name="Versione" value="${prodotto}-${version}" />
					<attribute name="Ambiente" value="${target}" />
				</section>
				<attribute name="Class-Path" value="${mf.classpath}" />
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
			

		</jar>
				
	<!--	<copy todir="${temp}">
			<fileset dir="${external}" excludesfile="external/run.sh"/>
		</copy>
		-->		
		<tar destfile="${dist}/${target}/buonoresbanbatch-${version}.tar" basedir="${temp}" >
			<exclude name = "${target}/**"/>
		</tar>
		
		
	</target>
	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: environment-recreate                              # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="environment-recreate"
	        description="Ricrea l&apos;environment di configurazione per il target corrente (per applicare le sostituzionidelle variabili).">
		<mkdir dir="build/temp/conf" />
			<copy todir="build/temp/conf" overwrite="true">
		<fileset dir="${conf}" />
		</copy>
	</target>


	<!-- -->
	<!-- ############################################################# -->
	<!-- # [PKG]: package-all                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="package-all"
	        description="Esegue il packaging di ogni componente del prodotto">
		<echo message="====== ${basedir}"/>
		<antcall target="package-ear" />
	</target>




	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-all                                        # -->
	<!-- ############################################################# -->
	<!-- nota: non cancella la directory "dist" appositamente: v. STDMDD-495.
	per ripulire anche la "dist" richiamare esplicitamente il target "clean-dist" -->
	<!-- -->
	<target name="clean-all" description="Rimuove tutte le cartelle temporanee."
	        depends="clean-archives, clean-cache, clean-classes, clean-javadoc, clean-jsp, clean-temp" />

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-cache                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-cache"
	        description="Rimuove la cartella di cache di Ivy e la lib.">
		<delete dir="${build}/cache" failonerror="no" />
		<delete dir="${lib}" failonerror="no" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-temp                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-temp"
	        description="Rimuove la cartella dei files temporanei di build.">
		<delete dir="${temp}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-archives                                  # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-archives"
	        description="Rimuove la cartella degli archivi (war, ear, ...).">
		<delete dir="${build}/archives" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-dist                                       # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-dist"
	        description="Rimuove la cartella delle distribuzioni.">
		<delete dir="${dist}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-classes                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-classes"
	        description="Rimuove la cartella dei sorgenti compilati.">
		<delete dir="${build}/classes" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-javadoc                                    # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-javadoc"
	        description="Rimuove la cartella temporanea dei javadoc.">
		<delete dir="${build}/javadoc" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: clean-jsp                                        # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="clean-jsp"
	        description="Rimuove la cartella temporanea delle jsp compilate.">
	<delete dir="${build}/jsp" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # [CLEAN]: _clean-web-inf                                   # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="_clean-web-inf"
	        description="Rimuove il contenuto di lib e classes della
	                     web application (per run locali).">
		<delete dir="${srcweb}/WEB-INF/classes" />
		<delete dir="${srcweb}/WEB-INF/lib" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about                                             # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about" description="Visualizza l'elenco dei target pubblici dello script.">
		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about" srcfile="buildfiles/about.txt" />
		<echo message="${about}" />
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: about-custom                                      # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="about-custom"
	        description="Visualizza l'elenco di tutti i target,
	                     pubblici e privati
	                     (equivalente a 'ant -projecthelp')" >

		<loadproperties srcfile="buildfiles/build.properties" />
		<loadfile property="about-custom" srcfile="buildfiles/about-custom.txt" />
		<echo message="${about-custom}" />
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
		</java>
	</target>

	<!-- -->
	<!-- ############################################################# -->
	<!-- # Target: show-vars                                         # -->
	<!-- ############################################################# -->
	<!-- -->
	<target name="show-vars" depends="init"
	        description="Visualizza tutte le variabili impostate nei file di properties e/o da linea di comando">
		<echo message="*****************************************" />
		<echo message="********  ${componente} environment  *******" />
		<echo message="*****************************************" />
		<echoproperties />
		<echo />
		<echo />
		<echo message="*****************************************" />
		<echo message="********    java properties      ********" />
		<echo message="*****************************************" />
		<echoproperties prefix="java."/>
	</target>

	<target name="deployLocal" description="deploy del pacchetto locale" depends="package-all">
	                <move
	                    overwrite="true"
	                    file="${build}/archives/${target}/${ear-file-name}.ear"
	                	todir="${jbossHome}\standalone\deployments"
	                    verbose="true"/>
	</target>
	<taskdef resource="net/sf/antcontrib/antlib.xml"/>

</project>

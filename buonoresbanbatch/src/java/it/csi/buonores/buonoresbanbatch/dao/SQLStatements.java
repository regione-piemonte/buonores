/*******************************************************************************
 
* Copyright Regione Piemonte - 2024
 
* SPDX-License-Identifier: EUPL-1.2
 
******************************************************************************/
package it.csi.buonores.buonoresbanbatch.dao;

public class SQLStatements {
			
	public static final String INSERT_LOG_AUDIT = "insert into csi_log_audit " 
			+ " (data_ora,id_app,ip_address,utente,operazione,ogg_oper,key_oper,uuid,request_payload,response_payload,esito_chiamata) values "
			+ " (now(), 'BUONORESBANBATCH' , '10.1.1.1' ,'BUONORESBANBATCH', 'update','invioBandi', 'Batch_invioBandi',null,"
			+ "pgp_sym_encrypt(?, ?)::bytea, pgp_sym_encrypt(?, ?)::bytea, ?)";
	
    public static final String GETRICHIESTE = "with gradpub as (select c.graduatoria_id  "
    		+ "from bres_r_graduatoria_stato a, bres_d_graduatoria_stato b,bres_t_graduatoria c "
            + "where a.graduatoria_stato_id = b.graduatoria_stato_id "
            + "and c.graduatoria_id=a.graduatoria_id "
            + "and a.data_cancellazione is null "
            + "and b.data_cancellazione is null "
            + "and c.data_cancellazione is null "
            + "and b.graduatoria_stato_cod ='PUBBLICATA' "
            + "and now() between coalesce(a.validita_inizio, now()) and coalesce(a.validita_fine,now()) "
            + "and now() between coalesce(b.validita_inizio, now()) and coalesce(b.validita_fine,now()) "
            + "order by a.validita_inizio desc "
            + "limit 1) " 
            + "select distinct a.beneficiario_cf,d.domanda_det_id,c.domanda_stato_cod,d.validita_inizio::date, "
			+ "now()::date-d.validita_inizio::date giorni,a.richiedente_cf,a.domanda_numero,d.sportello_id,a.domanda_id "
			+ "from bres_t_domanda a, bres_d_contributo_tipo b, "
			+ "bres_d_domanda_stato c, bres_t_domanda_dettaglio d, "
			+ "bres_t_graduatoria_dettaglio btgd, gradpub "
			+ "where a.contributo_tipo_id = b.contributo_tipo_id "
			+ "and b.contributo_tipo_cod ='RES' "
			+ "and a.sportello_id =d.sportello_id "
			+ "and c.domanda_stato_id = d.domanda_stato_id "
			+ "and d.domanda_id =a.domanda_id "
			+ "and b.validita_fine is null "
			+ "and d.validita_fine is null "
			+ "and c.validita_fine is null "
			+ "and c.domanda_stato_cod in ('IN_PAGAMENTO') "
			+ "and a.data_cancellazione is null "
			+ "and b.data_cancellazione is null "
			+ "and c.data_cancellazione is null "
			+ "and d.data_cancellazione is null "
			+ "and d.domanda_det_id not in "
			+ "(select a.domanda_det_id "
			+ "from  bres_d_batch_stato b, bres_d_batch c,bres_s_batch_esecuzione_det d,bres_s_batch_esecuzione a "
			+ "INNER join (select a.domanda_det_id from bres_s_batch_esecuzione a, bres_d_batch_stato b, bres_d_batch c,bres_s_batch_esecuzione_det d "
			+ "where a.batchesecstato_id = b.batchesecstato_id "
			+ "and b.batchesecstato_cod = 'STATO_OK' "
			+ "and a.batch_id=c.batch_id "
			+ "and c.batch_cod='PUBBLICAZIONE' "
			+ "and a.data_cancellazione is null "
			+ "and b.validita_inizio  <= now() "
			+ "and b.validita_fine is null "
			+ "and b.data_cancellazione is null "
			+ "and d.data_cancellazione is null "
			+ "and a.batchesecstato_id = d.batchesecstato_id "
			+ "and d.batchesec_id = a.batchesec_id "
			+ "group by a.domanda_det_id "
			+ "HAVING COUNT(*)=6) p on p.domanda_det_id=a.domanda_det_id "
			+ "where a.batchesecstato_id = b.batchesecstato_id "
			+ "and b.batchesecstato_cod = 'STATO_OK' "
			+ "and a.batch_id=c.batch_id "
			+ "and c.batch_cod='PUBBLICAZIONE' "
			+ "and a.data_cancellazione is null "
			+ "and b.validita_inizio  <= now() "
			+ "and b.validita_fine is null "
			+ "and b.data_cancellazione is null "
			+ "and d.data_cancellazione is null "
			+ "and a.batchesecstato_id = d.batchesecstato_id "
			+ "and d.batchesec_id = a.batchesec_id) "
            + "and btgd.data_cancellazione is null "
            + "and btgd.domanda_id = a.domanda_id "
            + "and btgd.importo != 0 "
            + "and gradpub.graduatoria_id=btgd.graduatoria_id "
			+ "order by a.domanda_id";
		
	public static final String CHECK_STATO_GRADUATORIA = "select ( "
			+ "	case  "
			+ "		when ( "
			+ "			select bdgs.graduatoria_stato_cod  "
			+ "			from bres_r_graduatoria_stato brgs, bres_d_graduatoria_stato bdgs "
			+ "			where bdgs.graduatoria_stato_id  = brgs.graduatoria_stato_id "
			+ "			and now() between coalesce(brgs.validita_inizio, now()) and coalesce(brgs.validita_fine,now()) "
			+ "			and brgs.graduatoria_id  = ( "
			+ "				select btg.graduatoria_id  "
			+ "				from bres_t_graduatoria btg, bres_r_graduatoria_stato brgs  "
			+ "				where btg.graduatoria_id = brgs.graduatoria_id "
			+ "				and btg.data_cancellazione is null "
			+ "				and brgs.data_cancellazione is null  "
			+ "				and now() between coalesce(brgs.validita_inizio, now()) and coalesce(brgs.validita_fine,now()) "
			+ "				and btg.sportello_id in ( "
			+ "					select bts.sportello_id "
			+ "					from bres_t_sportello bts "
			+ "					where bts.data_cancellazione is null "
			+ "					and bts.sportello_id = ?) "
			+ "				) "
			+ "		) = 'PUBBLICATA' "
			+ "		then true "
			+ "		else false "
			+ "	end "
			+ ") as controllo ";
	
	
	public static final String DESC_GRADUATORIA_PUBBLICATA = "select "
			+ "btg.graduatoria_cod "
			+ "from "
			+ "bres_t_graduatoria btg, "
			+ "bres_r_graduatoria_stato brgs, "
			+ "bres_d_graduatoria_stato bdgs "
			+ "where "
			+ "btg.graduatoria_id = brgs.graduatoria_id "
			+ "and bdgs.graduatoria_stato_id = brgs.graduatoria_stato_id "
			+ "and btg.data_cancellazione is null "
			+ "and brgs.data_cancellazione is null "
			+ "and bdgs.graduatoria_stato_cod = 'PUBBLICATA' "
			+ "and now() between coalesce(brgs.validita_inizio, "
			+ "now()) and coalesce(brgs.validita_fine, "
			+ "now()) "
			+ "and btg.sportello_id in ( "
				+ "select "
				+ "bts.sportello_id "
				+ "from "
				+ "bres_t_sportello bts "
				+ "where "
				+ "bts.data_cancellazione is null "
				+ "and bts.sportello_id = ?)"; 
	
	
	public static final String DESC_GRADUATORIA_ULTIMA_PUBBLICATA ="select c.graduatoria_cod from bres_r_graduatoria_stato a, bres_d_graduatoria_stato b, bres_t_graduatoria c "
			+ "where a.graduatoria_stato_id = b.graduatoria_stato_id "
			+ "and c.graduatoria_id=a.graduatoria_id "
			+ "and a.data_cancellazione is null "
			+ "and b.data_cancellazione is null "
			+ "and c.data_cancellazione is null "
			+ "and b.graduatoria_stato_cod ='PUBBLICATA' "
			+ "and now() between coalesce(a.validita_inizio, now()) and coalesce(a.validita_fine,now()) "
			+ "and now() between coalesce(b.validita_inizio, now()) and coalesce(b.validita_fine,now()) "
			+ "order by a.validita_inizio desc "
			+ "limit 1";
	
	public static final String GETRICHIESTENONFINANZIATE_OLD = "select distinct a.beneficiario_cf,d.domanda_det_id,c.domanda_stato_cod,d.validita_inizio::date, "
			+ "now()::date-d.validita_inizio::date giorni,a.richiedente_cf,a.domanda_numero,d.sportello_id,a.domanda_id "
			+ "from bres_t_domanda a, bres_d_contributo_tipo b, "
			+ "bres_d_domanda_stato c, bres_t_domanda_dettaglio d "
			+ "where a.contributo_tipo_id = b.contributo_tipo_id "
			+ "and b.contributo_tipo_cod ='RES' "
			+ "and a.sportello_id =d.sportello_id "
			+ "and c.domanda_stato_id = d.domanda_stato_id "
			+ "and d.domanda_id =a.domanda_id "
			+ "and b.validita_fine is null "
			+ "and d.validita_fine is null "
			+ "and c.validita_fine is null "
			+ "and c.domanda_stato_cod in ('AMMESSA','AMMESSA_RISERVA') "
			+ "and a.data_cancellazione is null "
			+ "and b.data_cancellazione is null "
			+ "and c.data_cancellazione is null "
			+ "and d.data_cancellazione is null order by a.domanda_id";
	
	public static final String GETRICHIESTENONFINANZIATE="with last_grad_pub as ( select btg.graduatoria_id  from bres_t_graduatoria btg,bres_r_graduatoria_stato brgs,bres_d_graduatoria_stato bdgs "
			+ "where "
			+ "btg.graduatoria_id =brgs.graduatoria_id "
			+ "and brgs.graduatoria_stato_id =bdgs.graduatoria_stato_id "
			+ "and bdgs.graduatoria_stato_cod ='PUBBLICATA' "
			+ "and btg.data_cancellazione is null "
			+ "and brgs.data_cancellazione is null "
			+ "and bdgs.data_cancellazione is null "
			+ "ORDER BY btg.graduatoria_id  DESC "
			+ "LIMIT 1 )		"
			+ "select distinct a.beneficiario_cf,d.domanda_det_id,c.domanda_stato_cod,d.validita_inizio::date, "
			+ "			now()::date-d.validita_inizio::date giorni,a.richiedente_cf,a.domanda_numero,d.sportello_id,a.domanda_id " 
			+ "			from bres_t_domanda a, bres_d_contributo_tipo b, "
			+ "			bres_d_domanda_stato c, bres_t_domanda_dettaglio d,bres_t_graduatoria_dettaglio btgd,bres_r_graduatoria_stato brgs,last_grad_pub "
			+ "			where a.contributo_tipo_id = b.contributo_tipo_id "
			+ "			and b.contributo_tipo_cod ='RES' "
			+ "			and a.sportello_id =d.sportello_id "
			+ "			and c.domanda_stato_id = d.domanda_stato_id "
			+ "			and d.domanda_id =a.domanda_id "
			+ "			and last_grad_pub.graduatoria_id=btgd.graduatoria_id "
			+ "			and btgd.domanda_id =a.domanda_id "
			+ "			and btgd.importo =0 "
			+ "			and b.validita_fine is null "
			+ "			and d.validita_fine is null "
			+ "			and c.validita_fine is null "
			+ "			and c.domanda_stato_cod in ('AMMESSA','AMMESSA_RISERVA') "
			+ "			and a.data_cancellazione is null "
			+ "			and b.data_cancellazione is null "
			+ "			and c.data_cancellazione is null "
			+ "			and btgd.data_cancellazione is null "
			+ "			and d.data_cancellazione is null order by a.domanda_id;	";
	
	public static final String SELECT_PRECEDENTE_STATO = "with tab1 as ( "
			+ "select a.domanda_det_cod, max(a.validita_inizio) validita_inizio from bres_t_domanda_dettaglio a, "
			+ "bres_t_domanda b,bres_d_domanda_stato c "
			+ "where a.domanda_id = b.domanda_id "
			+ "and b.domanda_numero  = ? "
			+ "and c.domanda_stato_id = a.domanda_stato_id "
			+ "and a.validita_fine is not null "
			+ "and a.data_cancellazione is null "
			+ "and c.data_cancellazione is null "
			+ "and b.data_cancellazione is null "
			+ "and c.validita_fine is null "
			+ "group by a.domanda_det_cod "
			+ "order by validita_inizio desc "
			+ "limit 1) "
			+ "select domanda_det_cod from tab1";
	
	public static final String SELECT_BUONO_CREATO = "select distinct buono_id from bres_t_buono where domanda_id = ? and sportello_id = ? "
			+ "and data_cancellazione is null";
	
	public static final String INSERT_INTO_BUONO = "insert into bres_t_buono (domanda_det_id,sportello_id, "
			+ "domanda_id, utente_creazione,utente_modifica,decorrenza_inizio,decorrenza_fine) values (?,?,?,'BUONORESBANBATCH','BUONORESBANBATCH',?,?)";
	
	public static final String INSERT_INTO_BUONO_STATO = "insert into bres_r_buono_stato (buono_id,buono_stato_id, "
			+ "utente_creazione,utente_modifica) values (?,(select buono_stato_id from bres_d_buono_stato where buono_stato_cod=?),'BUONORESBANBATCH','BUONORESBANBATCH')";
	
	public static final String INSERT_INTO_BUONO_FORNITORE="insert into bres_t_buono_fornitore ("
			+ "rsa_cod,"
			+ "rsa_cod_arpe,"
			+ "rsa_denominazione,"
			+ "rsa_indirizzo,"
			+ "rsa_comune,"
			+ "rsa_provincia,"
			+ "rsa_cfpiva,"
			+ "rsa_sede_legale_denominazione,"
			+ "rsa_sede_legale_indirizzo,"
			+ "rsa_sede_legale_comune,"
			+ "rsa_sede_legale_provincia,"
			+ "buono_id,"
			+ "utente_creazione,"
			+ "utente_modifica) "
			+ "		("
			+ "		select "
			+ "		btdd.rsa_cod,"
			+ "		btdd.rsa_arpe_cod,"
			+ "		btdd.rsa_denominazione,"
			+ "		btdd.rsa_indirizzo ,"
			+ "		btdd.rsa_comune,"
			+ "		btdd.rsa_provincia,"
			+ "		btdd.rsa_cfpiva,"
			+ "		btdd.rsa_sede_legale_denominazione,"
			+ "		btdd.rsa_sede_legale_indirizzo,"
			+ "		btdd.rsa_sede_legale_comune,"
			+ "		btdd.rsa_sede_legale_provincia,"
			+ "		 ?,"
			+ "		 'BUONORESBANBATCH',"
			+ "		 'BUONORESBANBATCH' "
			+ "		from bres_t_domanda_dettaglio btdd"
			+ "		where btdd.domanda_det_id = ? "
			+ "		and btdd.data_cancellazione is null ) ";
	
	public static final String INSERT_INTO_BUONO_CONTRATTO="insert into bres_t_contratto ("
			+ "contratto_data_inizio,"
			+ "contratto_data_fine,"
			+ "fornitore_tipo_id,"
			+ "fornitore_piva,"
			+ "contratto_tipo_id,"
			+ "rapporto_tipo_id,"
			+ "buono_id,"
			+ "fornitore_id,"
			+ "utente_creazione,"
			+ "utente_modifica ) "
			+ "(select "
			+ "btdd.contratto_data_inizio,"
			+ "btdd.contratto_data_fine, "
			+ " ( select distinct fornitore_tipo_id from bres_d_fornitore_tipo where fornitore_tipo_cod='RSA'),"
			+ "btdd.rsa_cfpiva,	"
			+ "btdd.contratto_tipo_id,	"
			+ "btdd.rapporto_tipo_id,	"
			+ "	?,"
			+ "	?,"
			+ "'BUONORESBANBATCH',"
			+ "'BUONORESBANBATCH'"
			+ "			from bres_t_domanda_dettaglio btdd, "
			+ "			bres_d_contratto_tipo bdct "
			+ "			where btdd.domanda_det_id = ? "
			+ "			and bdct.contratto_tipo_id = btdd.contratto_tipo_id "
			+ "			and bdct.contratto_tipo_cod != 'NESSUN_CONTRATTO' "
			+ "			and btdd.data_cancellazione is null ) ";
	
	public static final String INSERT_INTO_BUONO_ALLEGATO = "insert into bres_t_buono_allegato (file_name , file_type , file_path,allegato_tipo_id,"
			+ "utente_creazione,utente_modifica) "
			+ "(select file_name , file_type , file_path, "
			+ "(select allegato_tipo_id from bres_d_buono_allegato_tipo where allegato_tipo_cod=bdat.allegato_tipo_cod),'BUONORESBANBATCH','BUONORESBANBATCH' "
			+ "  from bres_t_allegato bta, bres_d_allegato_tipo bdat ,bres_d_contratto_tipo bdct,bres_t_domanda_dettaglio btdd "
			+ "where bdat.allegato_tipo_id = bta.allegato_tipo_id "
			+ "and bdct.contratto_tipo_id = btdd.contratto_tipo_id "
			+ "and btdd.domanda_det_id = bta.domanda_det_id "
			+ "and case when bdct.contratto_tipo_cod ='CONTRATTO_RSA' then bdat.allegato_tipo_cod in ('CONTRATTO_RSA') " 
			+ "end "
			+ "and bta.domanda_det_id = ?)";
			
	public static final String INSERT_INTO_R_CONTRATTO_ALLEGATO = "insert into bres_r_contratto_allegato (contratto_id , allegato_id,"
			+ "utente_creazione,utente_modifica) values (?,?,'BUONORESBANBATCH','BUONORESBANBATCH')";
	
    public static final String SELECT_PARAMETRO = "SELECT a.parametro_valore FROM bres_c_parametro a,bres_c_parametro_tipo b where " 
            + "b.parametro_tipo_id = a.parametro_tipo_id and "
            + "now()::date BETWEEN b.validita_inizio::date and COALESCE(b.validita_fine::date, now()::date) and b.data_cancellazione is null and "
            + "now()::date BETWEEN a.validita_inizio::date and COALESCE(a.validita_fine::date, now()::date) and a.data_cancellazione is null and "
            + "a.parametro_cod =? and "
            + "b.parametro_tipo_cod =?";
// TEST 1.2.0-010
	public static final String DATA_FINE_INPAGAMENTO = "select distinct  "
			+ " DATE_TRUNC('MONTH',btdd.validita_inizio + interval '1 months' ) dataDec "
			+ "from "
			+ "bres_t_domanda btd, "
			+ "bres_t_domanda_dettaglio btdd, "
			+ "bres_d_domanda_stato bdds "
			+ "where "
			+ "bdds.domanda_stato_id  = btdd.domanda_stato_id "
			+ "and bdds.domanda_stato_cod ='IN_PAGAMENTO' "
			+ "and btd.data_cancellazione is null "
			+ "and btdd.domanda_id = btd.domanda_id "  
			+ "and btdd.data_cancellazione is null "
			+ "and btdd.validita_inizio <= now() "
			+ "and btdd.validita_fine is null "
			+ "and btd.domanda_numero= ?"; 
	
	public static final String SELECT_MESI_BANDO = "select distinct btgf.finanziamento_mesi from bres_t_graduatoria_dettaglio btgd, bres_t_graduatoria_finanziamento btgf, "
			+ "bres_t_domanda btd " 
			+ "where btd.domanda_numero = ? "
			+ "and btd.domanda_id = btgd.domanda_id " 
			+ "and btgf.graduatoria_id = btgd.graduatoria_id "
			+ "and btgd.finanziamento_id = btgf.finanziamento_id "
			+ "and btd.data_cancellazione is null "
			+ "and btgd.data_cancellazione is null "
			+ "and btgf.data_cancellazione is null "
			+ "and btgd.importo!=0"; 
	
	public static final String DATA_SPORTELLO = "select to_char((bts.validita_fine + interval '1 months'),'yyyy-mm-01') dataSport "
			+ "from bres_t_domanda btd, bres_t_sportello bts "
			+ "where btd.domanda_numero  = ? "
			+ "and btd.data_cancellazione is null "
			+ "and bts.data_cancellazione is null "
			+ "and bts.sportello_id = btd.sportello_id";		
       
       public static final String SELECT_CONTRATTI_DA_INVIARE="SELECT btc.contratto_id,btdom.domanda_numero,btdom.richiedente_cf,btdom.beneficiario_cf "
    		+ "    					FROM bres_t_contratto btc"
    		+ "    					JOIN bres_t_buono btbuono on btbuono.buono_id = btc.buono_id"
    		+ "    					join bres_r_buono_stato brbs on brbs.buono_id =btbuono.buono_id "
    		+ "    					join bres_d_buono_stato bdbs  on brbs.buono_stato_id  =bdbs.buono_stato_id "
    		+ "    					JOIN bres_t_domanda btdom on btbuono.domanda_id =btdom.domanda_id"
    		+ "    					where"
    		+ "    					btc.data_invio_a_bandi is null"
    		+ "    					 and btc.data_cancellazione is null"
    		+ "    					and brbs.validita_fine is null "
    		+ "    					and brbs.data_cancellazione is null "
    		+ "    					and bdbs.buono_stato_cod in ('ATTIVO','RINUNCIATO','REVOCATO','REVOCATO_PRESA_VISIONE') "
    		+ "    					and btbuono.data_cancellazione is null "
    		+ "    					and btdom.data_cancellazione is null "
    		+ "						order by btdom.domanda_numero,btc.contratto_id ";
    
    public static final String UPDATE_CONTRATTO_INVIATO="UPDATE bres_t_contratto"
    		+ "					SET data_invio_a_bandi=now(), utente_modifica ='BUONORESBANBATCH',data_modifica =now() "
    		+ "					 where contratto_id =? ";
}

